// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"docker_image_metadata_api/models"
)

// PostMetadataImageReader is a Reader for the PostMetadataImage structure.
type PostMetadataImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMetadataImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostMetadataImageCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewPostMetadataImageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 424:
		result := NewPostMetadataImageFailedDependency()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostMetadataImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostMetadataImageCreated creates a PostMetadataImageCreated with default headers values
func NewPostMetadataImageCreated() *PostMetadataImageCreated {
	return &PostMetadataImageCreated{}
}

/* PostMetadataImageCreated describes a response with status code 201, with default header values.

Created
*/
type PostMetadataImageCreated struct {
}

func (o *PostMetadataImageCreated) Error() string {
	return fmt.Sprintf("[POST /metadata/image][%d] postMetadataImageCreated ", 201)
}

func (o *PostMetadataImageCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostMetadataImageConflict creates a PostMetadataImageConflict with default headers values
func NewPostMetadataImageConflict() *PostMetadataImageConflict {
	return &PostMetadataImageConflict{}
}

/* PostMetadataImageConflict describes a response with status code 409, with default header values.

Image already exists
*/
type PostMetadataImageConflict struct {
	Payload *models.ConflictResponse
}

func (o *PostMetadataImageConflict) Error() string {
	return fmt.Sprintf("[POST /metadata/image][%d] postMetadataImageConflict  %+v", 409, o.Payload)
}
func (o *PostMetadataImageConflict) GetPayload() *models.ConflictResponse {
	return o.Payload
}

func (o *PostMetadataImageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConflictResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMetadataImageFailedDependency creates a PostMetadataImageFailedDependency with default headers values
func NewPostMetadataImageFailedDependency() *PostMetadataImageFailedDependency {
	return &PostMetadataImageFailedDependency{}
}

/* PostMetadataImageFailedDependency describes a response with status code 424, with default header values.

Failed Dependency
*/
type PostMetadataImageFailedDependency struct {
	Payload *models.FailedDependency
}

func (o *PostMetadataImageFailedDependency) Error() string {
	return fmt.Sprintf("[POST /metadata/image][%d] postMetadataImageFailedDependency  %+v", 424, o.Payload)
}
func (o *PostMetadataImageFailedDependency) GetPayload() *models.FailedDependency {
	return o.Payload
}

func (o *PostMetadataImageFailedDependency) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FailedDependency)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMetadataImageInternalServerError creates a PostMetadataImageInternalServerError with default headers values
func NewPostMetadataImageInternalServerError() *PostMetadataImageInternalServerError {
	return &PostMetadataImageInternalServerError{}
}

/* PostMetadataImageInternalServerError describes a response with status code 500, with default header values.

Internal Error Message
*/
type PostMetadataImageInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PostMetadataImageInternalServerError) Error() string {
	return fmt.Sprintf("[POST /metadata/image][%d] postMetadataImageInternalServerError  %+v", 500, o.Payload)
}
func (o *PostMetadataImageInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostMetadataImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostMetadataImageBody post metadata image body
swagger:model PostMetadataImageBody
*/
type PostMetadataImageBody struct {

	// image name
	ImageName string `json:"ImageName,omitempty"`

	// tag name
	TagName string `json:"TagName,omitempty"`
}

// Validate validates this post metadata image body
func (o *PostMetadataImageBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post metadata image body based on context it is used
func (o *PostMetadataImageBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostMetadataImageBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostMetadataImageBody) UnmarshalBinary(b []byte) error {
	var res PostMetadataImageBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
