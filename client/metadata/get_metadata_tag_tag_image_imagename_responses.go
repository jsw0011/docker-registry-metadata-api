// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"docker_image_metadata_api/models"
)

// GetMetadataTagTagImageImagenameReader is a Reader for the GetMetadataTagTagImageImagename structure.
type GetMetadataTagTagImageImagenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetadataTagTagImageImagenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMetadataTagTagImageImagenameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetMetadataTagTagImageImagenameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMetadataTagTagImageImagenameOK creates a GetMetadataTagTagImageImagenameOK with default headers values
func NewGetMetadataTagTagImageImagenameOK() *GetMetadataTagTagImageImagenameOK {
	return &GetMetadataTagTagImageImagenameOK{}
}

/* GetMetadataTagTagImageImagenameOK describes a response with status code 200, with default header values.

List of registered image tags in the metadata service
*/
type GetMetadataTagTagImageImagenameOK struct {
	Payload models.Metadata
}

func (o *GetMetadataTagTagImageImagenameOK) Error() string {
	return fmt.Sprintf("[GET /metadata/tag/{tag}/image/{imagename}][%d] getMetadataTagTagImageImagenameOK  %+v", 200, o.Payload)
}
func (o *GetMetadataTagTagImageImagenameOK) GetPayload() models.Metadata {
	return o.Payload
}

func (o *GetMetadataTagTagImageImagenameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataTagTagImageImagenameInternalServerError creates a GetMetadataTagTagImageImagenameInternalServerError with default headers values
func NewGetMetadataTagTagImageImagenameInternalServerError() *GetMetadataTagTagImageImagenameInternalServerError {
	return &GetMetadataTagTagImageImagenameInternalServerError{}
}

/* GetMetadataTagTagImageImagenameInternalServerError describes a response with status code 500, with default header values.

Internal Error Message
*/
type GetMetadataTagTagImageImagenameInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetMetadataTagTagImageImagenameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /metadata/tag/{tag}/image/{imagename}][%d] getMetadataTagTagImageImagenameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetMetadataTagTagImageImagenameInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMetadataTagTagImageImagenameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
