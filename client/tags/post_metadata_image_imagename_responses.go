// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"docker_image_metadata_api/models"
)

// PostMetadataImageImagenameReader is a Reader for the PostMetadataImageImagename structure.
type PostMetadataImageImagenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMetadataImageImagenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostMetadataImageImagenameCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPostMetadataImageImagenameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostMetadataImageImagenameCreated creates a PostMetadataImageImagenameCreated with default headers values
func NewPostMetadataImageImagenameCreated() *PostMetadataImageImagenameCreated {
	return &PostMetadataImageImagenameCreated{}
}

/* PostMetadataImageImagenameCreated describes a response with status code 201, with default header values.

Created
*/
type PostMetadataImageImagenameCreated struct {
}

func (o *PostMetadataImageImagenameCreated) Error() string {
	return fmt.Sprintf("[POST /metadata/image/{imagename}][%d] postMetadataImageImagenameCreated ", 201)
}

func (o *PostMetadataImageImagenameCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostMetadataImageImagenameInternalServerError creates a PostMetadataImageImagenameInternalServerError with default headers values
func NewPostMetadataImageImagenameInternalServerError() *PostMetadataImageImagenameInternalServerError {
	return &PostMetadataImageImagenameInternalServerError{}
}

/* PostMetadataImageImagenameInternalServerError describes a response with status code 500, with default header values.

Internal Error Message
*/
type PostMetadataImageImagenameInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PostMetadataImageImagenameInternalServerError) Error() string {
	return fmt.Sprintf("[POST /metadata/image/{imagename}][%d] postMetadataImageImagenameInternalServerError  %+v", 500, o.Payload)
}
func (o *PostMetadataImageImagenameInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostMetadataImageImagenameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostMetadataImageImagenameBody post metadata image imagename body
swagger:model PostMetadataImageImagenameBody
*/
type PostMetadataImageImagenameBody struct {

	// tag name
	TagName string `json:"TagName,omitempty"`
}

// Validate validates this post metadata image imagename body
func (o *PostMetadataImageImagenameBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post metadata image imagename body based on context it is used
func (o *PostMetadataImageImagenameBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostMetadataImageImagenameBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostMetadataImageImagenameBody) UnmarshalBinary(b []byte) error {
	var res PostMetadataImageImagenameBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
