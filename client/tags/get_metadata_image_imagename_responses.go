// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"docker_image_metadata_api/models"
)

// GetMetadataImageImagenameReader is a Reader for the GetMetadataImageImagename structure.
type GetMetadataImageImagenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetadataImageImagenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMetadataImageImagenameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetMetadataImageImagenameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMetadataImageImagenameOK creates a GetMetadataImageImagenameOK with default headers values
func NewGetMetadataImageImagenameOK() *GetMetadataImageImagenameOK {
	return &GetMetadataImageImagenameOK{}
}

/* GetMetadataImageImagenameOK describes a response with status code 200, with default header values.

List of registered image tags in the metadata service
*/
type GetMetadataImageImagenameOK struct {
	Payload []string
}

func (o *GetMetadataImageImagenameOK) Error() string {
	return fmt.Sprintf("[GET /metadata/image/{imagename}][%d] getMetadataImageImagenameOK  %+v", 200, o.Payload)
}
func (o *GetMetadataImageImagenameOK) GetPayload() []string {
	return o.Payload
}

func (o *GetMetadataImageImagenameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataImageImagenameInternalServerError creates a GetMetadataImageImagenameInternalServerError with default headers values
func NewGetMetadataImageImagenameInternalServerError() *GetMetadataImageImagenameInternalServerError {
	return &GetMetadataImageImagenameInternalServerError{}
}

/* GetMetadataImageImagenameInternalServerError describes a response with status code 500, with default header values.

Internal Error Message
*/
type GetMetadataImageImagenameInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetMetadataImageImagenameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /metadata/image/{imagename}][%d] getMetadataImageImagenameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetMetadataImageImagenameInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMetadataImageImagenameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
