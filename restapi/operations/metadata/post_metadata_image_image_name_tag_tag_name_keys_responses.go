// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"docker_image_metadata_api/models"
)

// PostMetadataImageImageNameTagTagNameKeysCreatedCode is the HTTP code returned for type PostMetadataImageImageNameTagTagNameKeysCreated
const PostMetadataImageImageNameTagTagNameKeysCreatedCode int = 201

/*PostMetadataImageImageNameTagTagNameKeysCreated Created

swagger:response postMetadataImageImageNameTagTagNameKeysCreated
*/
type PostMetadataImageImageNameTagTagNameKeysCreated struct {
}

// NewPostMetadataImageImageNameTagTagNameKeysCreated creates PostMetadataImageImageNameTagTagNameKeysCreated with default headers values
func NewPostMetadataImageImageNameTagTagNameKeysCreated() *PostMetadataImageImageNameTagTagNameKeysCreated {

	return &PostMetadataImageImageNameTagTagNameKeysCreated{}
}

// WriteResponse to the client
func (o *PostMetadataImageImageNameTagTagNameKeysCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// PostMetadataImageImageNameTagTagNameKeysNotFoundCode is the HTTP code returned for type PostMetadataImageImageNameTagTagNameKeysNotFound
const PostMetadataImageImageNameTagTagNameKeysNotFoundCode int = 404

/*PostMetadataImageImageNameTagTagNameKeysNotFound Image with tag not found

swagger:response postMetadataImageImageNameTagTagNameKeysNotFound
*/
type PostMetadataImageImageNameTagTagNameKeysNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFoundResponse `json:"body,omitempty"`
}

// NewPostMetadataImageImageNameTagTagNameKeysNotFound creates PostMetadataImageImageNameTagTagNameKeysNotFound with default headers values
func NewPostMetadataImageImageNameTagTagNameKeysNotFound() *PostMetadataImageImageNameTagTagNameKeysNotFound {

	return &PostMetadataImageImageNameTagTagNameKeysNotFound{}
}

// WithPayload adds the payload to the post metadata image image name tag tag name keys not found response
func (o *PostMetadataImageImageNameTagTagNameKeysNotFound) WithPayload(payload *models.NotFoundResponse) *PostMetadataImageImageNameTagTagNameKeysNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post metadata image image name tag tag name keys not found response
func (o *PostMetadataImageImageNameTagTagNameKeysNotFound) SetPayload(payload *models.NotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMetadataImageImageNameTagTagNameKeysNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostMetadataImageImageNameTagTagNameKeysInternalServerErrorCode is the HTTP code returned for type PostMetadataImageImageNameTagTagNameKeysInternalServerError
const PostMetadataImageImageNameTagTagNameKeysInternalServerErrorCode int = 500

/*PostMetadataImageImageNameTagTagNameKeysInternalServerError Internal Error Message

swagger:response postMetadataImageImageNameTagTagNameKeysInternalServerError
*/
type PostMetadataImageImageNameTagTagNameKeysInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostMetadataImageImageNameTagTagNameKeysInternalServerError creates PostMetadataImageImageNameTagTagNameKeysInternalServerError with default headers values
func NewPostMetadataImageImageNameTagTagNameKeysInternalServerError() *PostMetadataImageImageNameTagTagNameKeysInternalServerError {

	return &PostMetadataImageImageNameTagTagNameKeysInternalServerError{}
}

// WithPayload adds the payload to the post metadata image image name tag tag name keys internal server error response
func (o *PostMetadataImageImageNameTagTagNameKeysInternalServerError) WithPayload(payload *models.ErrorResponse) *PostMetadataImageImageNameTagTagNameKeysInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post metadata image image name tag tag name keys internal server error response
func (o *PostMetadataImageImageNameTagTagNameKeysInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMetadataImageImageNameTagTagNameKeysInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
