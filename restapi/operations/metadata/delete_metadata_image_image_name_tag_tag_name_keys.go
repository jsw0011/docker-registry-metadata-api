// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteMetadataImageImageNameTagTagNameKeysHandlerFunc turns a function with the right signature into a delete metadata image image name tag tag name keys handler
type DeleteMetadataImageImageNameTagTagNameKeysHandlerFunc func(DeleteMetadataImageImageNameTagTagNameKeysParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteMetadataImageImageNameTagTagNameKeysHandlerFunc) Handle(params DeleteMetadataImageImageNameTagTagNameKeysParams) middleware.Responder {
	return fn(params)
}

// DeleteMetadataImageImageNameTagTagNameKeysHandler interface for that can handle valid delete metadata image image name tag tag name keys params
type DeleteMetadataImageImageNameTagTagNameKeysHandler interface {
	Handle(DeleteMetadataImageImageNameTagTagNameKeysParams) middleware.Responder
}

// NewDeleteMetadataImageImageNameTagTagNameKeys creates a new http.Handler for the delete metadata image image name tag tag name keys operation
func NewDeleteMetadataImageImageNameTagTagNameKeys(ctx *middleware.Context, handler DeleteMetadataImageImageNameTagTagNameKeysHandler) *DeleteMetadataImageImageNameTagTagNameKeys {
	return &DeleteMetadataImageImageNameTagTagNameKeys{Context: ctx, Handler: handler}
}

/* DeleteMetadataImageImageNameTagTagNameKeys swagger:route DELETE /metadata/image/{ImageName}/tag/{TagName}/keys Metadata deleteMetadataImageImageNameTagTagNameKeys

Remove key from metadata

Remove metadata key

*/
type DeleteMetadataImageImageNameTagTagNameKeys struct {
	Context *middleware.Context
	Handler DeleteMetadataImageImageNameTagTagNameKeysHandler
}

func (o *DeleteMetadataImageImageNameTagTagNameKeys) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteMetadataImageImageNameTagTagNameKeysParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DeleteMetadataImageImageNameTagTagNameKeysBody delete metadata image image name tag tag name keys body
//
// swagger:model DeleteMetadataImageImageNameTagTagNameKeysBody
type DeleteMetadataImageImageNameTagTagNameKeysBody struct {

	// default value
	Value string `json:"Value,omitempty"`

	// key
	Key string `json:"Key,omitempty"`
}

// Validate validates this delete metadata image image name tag tag name keys body
func (o *DeleteMetadataImageImageNameTagTagNameKeysBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete metadata image image name tag tag name keys body based on context it is used
func (o *DeleteMetadataImageImageNameTagTagNameKeysBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteMetadataImageImageNameTagTagNameKeysBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteMetadataImageImageNameTagTagNameKeysBody) UnmarshalBinary(b []byte) error {
	var res DeleteMetadataImageImageNameTagTagNameKeysBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
