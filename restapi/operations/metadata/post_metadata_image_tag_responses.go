// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"docker_image_metadata_api/models"
)

// PostMetadataImageTagOKCode is the HTTP code returned for type PostMetadataImageTagOK
const PostMetadataImageTagOKCode int = 200

/*PostMetadataImageTagOK List of registered image tags in the metadata service

swagger:response postMetadataImageTagOK
*/
type PostMetadataImageTagOK struct {

	/*
	  In: Body
	*/
	Payload models.Metadata `json:"body,omitempty"`
}

// NewPostMetadataImageTagOK creates PostMetadataImageTagOK with default headers values
func NewPostMetadataImageTagOK() *PostMetadataImageTagOK {

	return &PostMetadataImageTagOK{}
}

// WithPayload adds the payload to the post metadata image tag o k response
func (o *PostMetadataImageTagOK) WithPayload(payload models.Metadata) *PostMetadataImageTagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post metadata image tag o k response
func (o *PostMetadataImageTagOK) SetPayload(payload models.Metadata) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMetadataImageTagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Metadata{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostMetadataImageTagNotFoundCode is the HTTP code returned for type PostMetadataImageTagNotFound
const PostMetadataImageTagNotFoundCode int = 404

/*PostMetadataImageTagNotFound Image with tag not found

swagger:response postMetadataImageTagNotFound
*/
type PostMetadataImageTagNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFoundResponse `json:"body,omitempty"`
}

// NewPostMetadataImageTagNotFound creates PostMetadataImageTagNotFound with default headers values
func NewPostMetadataImageTagNotFound() *PostMetadataImageTagNotFound {

	return &PostMetadataImageTagNotFound{}
}

// WithPayload adds the payload to the post metadata image tag not found response
func (o *PostMetadataImageTagNotFound) WithPayload(payload *models.NotFoundResponse) *PostMetadataImageTagNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post metadata image tag not found response
func (o *PostMetadataImageTagNotFound) SetPayload(payload *models.NotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMetadataImageTagNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostMetadataImageTagInternalServerErrorCode is the HTTP code returned for type PostMetadataImageTagInternalServerError
const PostMetadataImageTagInternalServerErrorCode int = 500

/*PostMetadataImageTagInternalServerError Internal Error Message

swagger:response postMetadataImageTagInternalServerError
*/
type PostMetadataImageTagInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostMetadataImageTagInternalServerError creates PostMetadataImageTagInternalServerError with default headers values
func NewPostMetadataImageTagInternalServerError() *PostMetadataImageTagInternalServerError {

	return &PostMetadataImageTagInternalServerError{}
}

// WithPayload adds the payload to the post metadata image tag internal server error response
func (o *PostMetadataImageTagInternalServerError) WithPayload(payload *models.ErrorResponse) *PostMetadataImageTagInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post metadata image tag internal server error response
func (o *PostMetadataImageTagInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMetadataImageTagInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
