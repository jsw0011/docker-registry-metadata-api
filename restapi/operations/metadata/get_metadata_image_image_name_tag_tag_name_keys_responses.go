// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"docker_image_metadata_api/models"
)

// GetMetadataImageImageNameTagTagNameKeysOKCode is the HTTP code returned for type GetMetadataImageImageNameTagTagNameKeysOK
const GetMetadataImageImageNameTagTagNameKeysOKCode int = 200

/*GetMetadataImageImageNameTagTagNameKeysOK List of registered image tags in the metadata service

swagger:response getMetadataImageImageNameTagTagNameKeysOK
*/
type GetMetadataImageImageNameTagTagNameKeysOK struct {

	/*
	  In: Body
	*/
	Payload models.Metadata `json:"body,omitempty"`
}

// NewGetMetadataImageImageNameTagTagNameKeysOK creates GetMetadataImageImageNameTagTagNameKeysOK with default headers values
func NewGetMetadataImageImageNameTagTagNameKeysOK() *GetMetadataImageImageNameTagTagNameKeysOK {

	return &GetMetadataImageImageNameTagTagNameKeysOK{}
}

// WithPayload adds the payload to the get metadata image image name tag tag name keys o k response
func (o *GetMetadataImageImageNameTagTagNameKeysOK) WithPayload(payload models.Metadata) *GetMetadataImageImageNameTagTagNameKeysOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get metadata image image name tag tag name keys o k response
func (o *GetMetadataImageImageNameTagTagNameKeysOK) SetPayload(payload models.Metadata) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMetadataImageImageNameTagTagNameKeysOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Metadata{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMetadataImageImageNameTagTagNameKeysNotFoundCode is the HTTP code returned for type GetMetadataImageImageNameTagTagNameKeysNotFound
const GetMetadataImageImageNameTagTagNameKeysNotFoundCode int = 404

/*GetMetadataImageImageNameTagTagNameKeysNotFound Image with tag not found

swagger:response getMetadataImageImageNameTagTagNameKeysNotFound
*/
type GetMetadataImageImageNameTagTagNameKeysNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFoundResponse `json:"body,omitempty"`
}

// NewGetMetadataImageImageNameTagTagNameKeysNotFound creates GetMetadataImageImageNameTagTagNameKeysNotFound with default headers values
func NewGetMetadataImageImageNameTagTagNameKeysNotFound() *GetMetadataImageImageNameTagTagNameKeysNotFound {

	return &GetMetadataImageImageNameTagTagNameKeysNotFound{}
}

// WithPayload adds the payload to the get metadata image image name tag tag name keys not found response
func (o *GetMetadataImageImageNameTagTagNameKeysNotFound) WithPayload(payload *models.NotFoundResponse) *GetMetadataImageImageNameTagTagNameKeysNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get metadata image image name tag tag name keys not found response
func (o *GetMetadataImageImageNameTagTagNameKeysNotFound) SetPayload(payload *models.NotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMetadataImageImageNameTagTagNameKeysNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMetadataImageImageNameTagTagNameKeysInternalServerErrorCode is the HTTP code returned for type GetMetadataImageImageNameTagTagNameKeysInternalServerError
const GetMetadataImageImageNameTagTagNameKeysInternalServerErrorCode int = 500

/*GetMetadataImageImageNameTagTagNameKeysInternalServerError Internal Error Message

swagger:response getMetadataImageImageNameTagTagNameKeysInternalServerError
*/
type GetMetadataImageImageNameTagTagNameKeysInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetMetadataImageImageNameTagTagNameKeysInternalServerError creates GetMetadataImageImageNameTagTagNameKeysInternalServerError with default headers values
func NewGetMetadataImageImageNameTagTagNameKeysInternalServerError() *GetMetadataImageImageNameTagTagNameKeysInternalServerError {

	return &GetMetadataImageImageNameTagTagNameKeysInternalServerError{}
}

// WithPayload adds the payload to the get metadata image image name tag tag name keys internal server error response
func (o *GetMetadataImageImageNameTagTagNameKeysInternalServerError) WithPayload(payload *models.ErrorResponse) *GetMetadataImageImageNameTagTagNameKeysInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get metadata image image name tag tag name keys internal server error response
func (o *GetMetadataImageImageNameTagTagNameKeysInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMetadataImageImageNameTagTagNameKeysInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
