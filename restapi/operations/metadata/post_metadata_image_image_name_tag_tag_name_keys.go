// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostMetadataImageImageNameTagTagNameKeysHandlerFunc turns a function with the right signature into a post metadata image image name tag tag name keys handler
type PostMetadataImageImageNameTagTagNameKeysHandlerFunc func(PostMetadataImageImageNameTagTagNameKeysParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostMetadataImageImageNameTagTagNameKeysHandlerFunc) Handle(params PostMetadataImageImageNameTagTagNameKeysParams) middleware.Responder {
	return fn(params)
}

// PostMetadataImageImageNameTagTagNameKeysHandler interface for that can handle valid post metadata image image name tag tag name keys params
type PostMetadataImageImageNameTagTagNameKeysHandler interface {
	Handle(PostMetadataImageImageNameTagTagNameKeysParams) middleware.Responder
}

// NewPostMetadataImageImageNameTagTagNameKeys creates a new http.Handler for the post metadata image image name tag tag name keys operation
func NewPostMetadataImageImageNameTagTagNameKeys(ctx *middleware.Context, handler PostMetadataImageImageNameTagTagNameKeysHandler) *PostMetadataImageImageNameTagTagNameKeys {
	return &PostMetadataImageImageNameTagTagNameKeys{Context: ctx, Handler: handler}
}

/* PostMetadataImageImageNameTagTagNameKeys swagger:route POST /metadata/image/{ImageName}/tag/{TagName}/keys Metadata postMetadataImageImageNameTagTagNameKeys

Create new key in metadata

Create new metadata key and (optional) new default value

*/
type PostMetadataImageImageNameTagTagNameKeys struct {
	Context *middleware.Context
	Handler PostMetadataImageImageNameTagTagNameKeysHandler
}

func (o *PostMetadataImageImageNameTagTagNameKeys) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostMetadataImageImageNameTagTagNameKeysParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostMetadataImageImageNameTagTagNameKeysBody post metadata image image name tag tag name keys body
//
// swagger:model PostMetadataImageImageNameTagTagNameKeysBody
type PostMetadataImageImageNameTagTagNameKeysBody struct {

	// default value
	Value string `json:"Value,omitempty"`

	// key
	Key string `json:"Key,omitempty"`
}

// Validate validates this post metadata image image name tag tag name keys body
func (o *PostMetadataImageImageNameTagTagNameKeysBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post metadata image image name tag tag name keys body based on context it is used
func (o *PostMetadataImageImageNameTagTagNameKeysBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostMetadataImageImageNameTagTagNameKeysBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostMetadataImageImageNameTagTagNameKeysBody) UnmarshalBinary(b []byte) error {
	var res PostMetadataImageImageNameTagTagNameKeysBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
