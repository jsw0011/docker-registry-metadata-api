// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"docker_image_metadata_api/models"
)

// DeleteMetadataImageOKCode is the HTTP code returned for type DeleteMetadataImageOK
const DeleteMetadataImageOKCode int = 200

/*DeleteMetadataImageOK Removed successfully

swagger:response deleteMetadataImageOK
*/
type DeleteMetadataImageOK struct {

	/*List of removed tags
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewDeleteMetadataImageOK creates DeleteMetadataImageOK with default headers values
func NewDeleteMetadataImageOK() *DeleteMetadataImageOK {

	return &DeleteMetadataImageOK{}
}

// WithPayload adds the payload to the delete metadata image o k response
func (o *DeleteMetadataImageOK) WithPayload(payload []string) *DeleteMetadataImageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete metadata image o k response
func (o *DeleteMetadataImageOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMetadataImageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DeleteMetadataImageNotFoundCode is the HTTP code returned for type DeleteMetadataImageNotFound
const DeleteMetadataImageNotFoundCode int = 404

/*DeleteMetadataImageNotFound Any image not found in database

swagger:response deleteMetadataImageNotFound
*/
type DeleteMetadataImageNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFoundResponse `json:"body,omitempty"`
}

// NewDeleteMetadataImageNotFound creates DeleteMetadataImageNotFound with default headers values
func NewDeleteMetadataImageNotFound() *DeleteMetadataImageNotFound {

	return &DeleteMetadataImageNotFound{}
}

// WithPayload adds the payload to the delete metadata image not found response
func (o *DeleteMetadataImageNotFound) WithPayload(payload *models.NotFoundResponse) *DeleteMetadataImageNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete metadata image not found response
func (o *DeleteMetadataImageNotFound) SetPayload(payload *models.NotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMetadataImageNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteMetadataImageInternalServerErrorCode is the HTTP code returned for type DeleteMetadataImageInternalServerError
const DeleteMetadataImageInternalServerErrorCode int = 500

/*DeleteMetadataImageInternalServerError Internal Error Message

swagger:response deleteMetadataImageInternalServerError
*/
type DeleteMetadataImageInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewDeleteMetadataImageInternalServerError creates DeleteMetadataImageInternalServerError with default headers values
func NewDeleteMetadataImageInternalServerError() *DeleteMetadataImageInternalServerError {

	return &DeleteMetadataImageInternalServerError{}
}

// WithPayload adds the payload to the delete metadata image internal server error response
func (o *DeleteMetadataImageInternalServerError) WithPayload(payload *models.ErrorResponse) *DeleteMetadataImageInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete metadata image internal server error response
func (o *DeleteMetadataImageInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMetadataImageInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
