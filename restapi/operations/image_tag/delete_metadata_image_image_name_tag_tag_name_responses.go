// Code generated by go-swagger; DO NOT EDIT.

package image_tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"docker_image_metadata_api/models"
)

// DeleteMetadataImageImageNameTagTagNameOKCode is the HTTP code returned for type DeleteMetadataImageImageNameTagTagNameOK
const DeleteMetadataImageImageNameTagTagNameOKCode int = 200

/*DeleteMetadataImageImageNameTagTagNameOK Erased

swagger:response deleteMetadataImageImageNameTagTagNameOK
*/
type DeleteMetadataImageImageNameTagTagNameOK struct {
}

// NewDeleteMetadataImageImageNameTagTagNameOK creates DeleteMetadataImageImageNameTagTagNameOK with default headers values
func NewDeleteMetadataImageImageNameTagTagNameOK() *DeleteMetadataImageImageNameTagTagNameOK {

	return &DeleteMetadataImageImageNameTagTagNameOK{}
}

// WriteResponse to the client
func (o *DeleteMetadataImageImageNameTagTagNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteMetadataImageImageNameTagTagNameNotFoundCode is the HTTP code returned for type DeleteMetadataImageImageNameTagTagNameNotFound
const DeleteMetadataImageImageNameTagTagNameNotFoundCode int = 404

/*DeleteMetadataImageImageNameTagTagNameNotFound Image with tag not found

swagger:response deleteMetadataImageImageNameTagTagNameNotFound
*/
type DeleteMetadataImageImageNameTagTagNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFoundResponse `json:"body,omitempty"`
}

// NewDeleteMetadataImageImageNameTagTagNameNotFound creates DeleteMetadataImageImageNameTagTagNameNotFound with default headers values
func NewDeleteMetadataImageImageNameTagTagNameNotFound() *DeleteMetadataImageImageNameTagTagNameNotFound {

	return &DeleteMetadataImageImageNameTagTagNameNotFound{}
}

// WithPayload adds the payload to the delete metadata image image name tag tag name not found response
func (o *DeleteMetadataImageImageNameTagTagNameNotFound) WithPayload(payload *models.NotFoundResponse) *DeleteMetadataImageImageNameTagTagNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete metadata image image name tag tag name not found response
func (o *DeleteMetadataImageImageNameTagTagNameNotFound) SetPayload(payload *models.NotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMetadataImageImageNameTagTagNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteMetadataImageImageNameTagTagNameInternalServerErrorCode is the HTTP code returned for type DeleteMetadataImageImageNameTagTagNameInternalServerError
const DeleteMetadataImageImageNameTagTagNameInternalServerErrorCode int = 500

/*DeleteMetadataImageImageNameTagTagNameInternalServerError Internal Error Message

swagger:response deleteMetadataImageImageNameTagTagNameInternalServerError
*/
type DeleteMetadataImageImageNameTagTagNameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewDeleteMetadataImageImageNameTagTagNameInternalServerError creates DeleteMetadataImageImageNameTagTagNameInternalServerError with default headers values
func NewDeleteMetadataImageImageNameTagTagNameInternalServerError() *DeleteMetadataImageImageNameTagTagNameInternalServerError {

	return &DeleteMetadataImageImageNameTagTagNameInternalServerError{}
}

// WithPayload adds the payload to the delete metadata image image name tag tag name internal server error response
func (o *DeleteMetadataImageImageNameTagTagNameInternalServerError) WithPayload(payload *models.ErrorResponse) *DeleteMetadataImageImageNameTagTagNameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete metadata image image name tag tag name internal server error response
func (o *DeleteMetadataImageImageNameTagTagNameInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMetadataImageImageNameTagTagNameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
